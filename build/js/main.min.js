console.log("Yeah dude"),console.log("Day bow bow"),console.log("Yeah dude"),console.log("Day bow bow"),THREE.StereoEffect=function(e){var t=this;this.eyeSeparation=3,this.focalLength=15,Object.defineProperties(this,{separation:{get:function(){return t.eyeSeparation},set:function(e){console.warn("THREE.StereoEffect: .separation is now .eyeSeparation."),t.eyeSeparation=e}},targetDistance:{get:function(){return t.focalLength},set:function(e){console.warn("THREE.StereoEffect: .targetDistance is now .focalLength."),t.focalLength=e}}});var a,o,n,r,i,s,c,p,E,h,f,l,u=new THREE.Vector3,d=new THREE.Quaternion,S=new THREE.Vector3,T=new THREE.PerspectiveCamera,g=new THREE.PerspectiveCamera;e.autoClear=!1,this.setSize=function(t,n){a=t/2,o=n,e.setSize(t,n)},this.render=function(t,w){t.updateMatrixWorld(),null===w.parent&&w.updateMatrixWorld(),w.matrixWorld.decompose(u,d,S),n=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(w.fov))/w.zoom)),p=w.near/this.focalLength,h=Math.tan(.5*THREE.Math.degToRad(n))*this.focalLength,E=.5*h*w.aspect,s=h*p,c=-s,f=(E+this.eyeSeparation/2)/(2*E),l=1-f,r=2*E*p*l,i=2*E*p*f,T.projectionMatrix.makeFrustum(-r,i,c,s,w.near,w.far),T.position.copy(u),T.quaternion.copy(d),T.translateX(-this.eyeSeparation/2),g.projectionMatrix.makeFrustum(-i,r,c,s,w.near,w.far),g.position.copy(u),g.quaternion.copy(d),g.translateX(this.eyeSeparation/2),e.clear(),e.enableScissorTest(!0),e.setScissor(0,0,a,o),e.setViewport(0,0,a,o),e.render(t,T),e.setScissor(a,0,a,o),e.setViewport(a,0,a,o),e.render(t,g),e.enableScissorTest(!1)}},THREE.StereoEffect=function(e){var t=this;this.eyeSeparation=3,this.focalLength=15,Object.defineProperties(this,{separation:{get:function(){return t.eyeSeparation},set:function(e){console.warn("THREE.StereoEffect: .separation is now .eyeSeparation."),t.eyeSeparation=e}},targetDistance:{get:function(){return t.focalLength},set:function(e){console.warn("THREE.StereoEffect: .targetDistance is now .focalLength."),t.focalLength=e}}});var a,o,n,r,i,s,c,p,E,h,f,l,u=new THREE.Vector3,d=new THREE.Quaternion,S=new THREE.Vector3,T=new THREE.PerspectiveCamera,g=new THREE.PerspectiveCamera;e.autoClear=!1,this.setSize=function(t,n){a=t/2,o=n,e.setSize(t,n)},this.render=function(t,w){t.updateMatrixWorld(),null===w.parent&&w.updateMatrixWorld(),w.matrixWorld.decompose(u,d,S),n=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(w.fov))/w.zoom)),p=w.near/this.focalLength,h=Math.tan(.5*THREE.Math.degToRad(n))*this.focalLength,E=.5*h*w.aspect,s=h*p,c=-s,f=(E+this.eyeSeparation/2)/(2*E),l=1-f,r=2*E*p*l,i=2*E*p*f,T.projectionMatrix.makeFrustum(-r,i,c,s,w.near,w.far),T.position.copy(u),T.quaternion.copy(d),T.translateX(-this.eyeSeparation/2),g.projectionMatrix.makeFrustum(-i,r,c,s,w.near,w.far),g.position.copy(u),g.quaternion.copy(d),g.translateX(this.eyeSeparation/2),e.clear(),e.enableScissorTest(!0),e.setScissor(0,0,a,o),e.setViewport(0,0,a,o),e.render(t,T),e.setScissor(a,0,a,o),e.setViewport(a,0,a,o),e.render(t,g),e.enableScissorTest(!1)}};